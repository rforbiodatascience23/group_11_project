```{r}
#| label: Loading packages
library(ggplot2)
library("tidyverse")
library(dplyr)
library(broom)
library(viridis)
library(RColorBrewer)
```

```{r}
#| label: Loading the cleaned data 
#| message: false
prostate_data_augment<-read_delim("../data/03_dat_aug.tsv")
```

##Data exploration

```{r}
#| label: Number of rows 
rows_count <- nrow(prostate_data_augment)
rows_count 

# 502 patients in the study
```

```{r}
#| label: Number of features
features_count <- ncol(prostate_data_augment)
features_count
```

```{r}
#| label: Number of missing values
na_count <- colSums(is.na(prostate_data_augment))
na_count
```

```{r}
#| label: Percentage of missing values
na_percentage <- round((na_count / rows_count) * 100, 1)
na_percentage_table <- data.frame( NA_Percentage = na_percentage)

na_percentage_plot <- ggplot(na_percentage_table, aes(x = rownames(na_percentage_table), y = NA_Percentage)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(title = "Missing Values",
       x="Features",
       y="Percentage") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

na_percentage_plot

#Save
ggsave('../results/na_percentage.png', na_percentage_plot)

```

```{r}
#| label: Summary statistics
data_summary <- data.frame(unclass(summary(prostate_data_augment)),
                           check.names = FALSE)
data_summary
```


```{r}
#| label: Summary statistics in boxplot
#First we pick columns that we want
selected_cols <- c("age", "Primary lesion size(cm^2)", "History of CVD",
                   "Status", "Gleason stage","Activity Level", 
                   "Treatment regime", "Drug", "Weight index",
                   "Serum haemoglobin level")
#subset
selected_data <- prostate_data_augment[, selected_cols]

# Convert long format
melted_data <- selected_data |>
  gather(variable, value)

# Calculate means for each variable and group them and remove NAs
mean_values <- melted_data %>%
  group_by(variable) %>%
  summarise(mean = mean(value, na.rm = TRUE))  

# Plot boxplots for all variables with mean shown
ggplot(melted_data, aes(x = variable, y = value, fill = variable)) +
  geom_boxplot() +
  geom_text(data = mean_values, aes(x = variable, y = mean, label = round(mean, 2)),
            vjust = -1, color = "black", size = 3) +  
  labs(title = "Boxplot of Selected Variables with Mean Annotations",
       x = "Features",
       y = "Values") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

ggsave('../results/all_boxplots.png', deaths_across_groups)
```


```{r}
#| label: Mean statistics
mean_statistics<- prostate_data_augment %>%
  group_by(stage) %>%
  summarise(
    Age_mean=mean(age,na.rm=TRUE),
    Gleason_stage_mean = mean(`Gleason stage`, na.rm = TRUE),
    Primary_lesion_mean = mean(`Primary lesion size(cm^2)`, na.rm = TRUE),
    Haemologbin_level_mean = mean(`Serum haemoglobin level`,na.rm=TRUE),
    Systolic_blood_pressure_mean = mean(`Systolic blood pressure`,na.rm=TRUE), 
    Diastolic_blood_pressure_mean= mean(`Diastolic blood pressure`,na.rm=TRUE)
  )
mean_statistics


```


```{r}
#| label: Cause of death across Age groups
deaths_across_groups<-prostate_data_augment |>
  filter(!is.na(`Cause of Death`)) |>
  ggplot(aes(x = `Cause of Death`, fill = as.factor(`Age group`))) +
  geom_bar(position = "dodge") +
  labs(title = "Cause of Death across Age Groups",
       x = "Cause of Death",
       y = "Number of Cases") +
  theme(legend.position = "bottom", 
      axis.text.x = element_text(angle = 45,hjust=1,size=10), 
      axis.text.y = element_text(size =10)) +
  scale_fill_manual(values = c("tomato2", "skyblue2", "palegreen3"), name = "Age group", labels = c("< 75 years", "75 to 80 years", "> 80 years")) 
deaths_across_groups

#Save
ggsave('../results/causes_across_groups.png', deaths_across_groups)

```

```{r}
#| label: Association of weight index and age across all types of cancer colored by Risk

weight_age_across_cancers<-prostate_data_augment|> 
  filter(!is.na(`Cause of Death`))|>
  filter(!is.na(Risk))|>
  ggplot(aes(x = age, y = `Weight index`, color = Risk)) +
  geom_point() +
  facet_wrap(~`Cause of Death`)+
  labs()
weight_age_across_cancers

#Save
ggsave('../results/wt_age_across_cancers.png', weight_age_across_cancers)
```


```{r}
#| label: Lesion size and haemoglobin correlation on each stage colored by Risk

haem_and_lesion_plot <-prostate_data_augment|>
  filter(!is.na(`Primary lesion size(cm^2)`))|>
  filter(!is.na(Risk))|>
  ggplot(aes(x = `Serum haemoglobin level`, 
             y = `Primary lesion size(cm^2)`, 
             color = Risk)) +
  geom_point() +
  facet_wrap(~stage,labeller = labeller(stage = c(
    "3" = "Stage 3",
    "4" = "Stage 4"))) +
  labs(x = "Haemoglobin Level", y = "Lesion Size", color = "Risk") +
  theme_minimal()
haem_and_lesion_plot 

#Save
ggsave('../results/haem_vs_lesion.png', haem_and_lesion_plot)
```

```{r}

#| label: Correlation of Gleason stage -Lesion size colored by cancer stage
gleason_and_lesion_by_stage<-prostate_data_augment|>
  filter(!is.na(`Primary lesion size(cm^2)`))|>
  filter(!is.na(`Gleason stage`))|>
  ggplot(aes(x = `Gleason stage`,
             y = `Primary lesion size(cm^2)`, 
             color = as.factor(stage))) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    x = "Gleason Stage",
    y = "Lesion size",
    title = "Lesion size vs Gleason Stage by Cancer Stage")+
  scale_color_discrete(name = "Cancer Stage",labels = c("Stage 3", "Stage 4"))
gleason_and_lesion_by_stage

#Save
ggsave('../results/gleason_vs_lesion.png',gleason_and_lesion_by_stage)
```

```{r}
#| label: Plots by Cause of Death

windex_sbp_causeofdeath <-prostate_data_augment|>
  filter(`Cause of Death` != 9 & `Cause of Death` != 8 & `Cause of Death` != 7 & `Cause of Death` != 5)|>
  ggplot(aes(x = `Weight index`, 
             y = `Systolic blood pressure`, 
             color = factor(`Cause of Death`))) +
  geom_point() +
  scale_fill_viridis_d()+
  geom_smooth(method = "lm", se = FALSE, color = "black", lwd=0.3)+
  #facet_wrap(~`Cause of Death`, ncol=10)+
  facet_wrap(~`Cause of Death`,labeller = labeller(`Cause of Death` = c(
    0 ~ "prostatic cancer",
    3 ~ "other cancer",
    1 ~ "heart or vascular",
    2 ~ "cerebrovascular",
    4 ~ "respiratory disease",
    6 ~ "pulmonary embolus")))+
    #5 ~ "other specific non", #maybe delete
    #7 ~ "unspecified non", #maybe delete
   # 8 ~ "unknown cause"))) + #maybe delete
  labs(x = "Weight index", y = "Systolic blood pressure", title = "Weight index vs Systolic blood pressure by Cause of Death") +
  scale_color_discrete(name = "Cause of Death", labels = c(
    "0" = "Prostate Cancer",
    "3" = "Other Cancer",
    "1" = "Heart or Vascular Disease",
    "2" = "Cerebrovascular Disease",
    "4" = "Respiratory Disease",
    "6" = "Pulmonary Embolus",
    "5" = "Other Specific Non",
    "7" = "Unspecified Non",
    "8" = "Unknown Cause"
  )) + 
  theme_minimal()+
  theme(strip.text = element_blank())


plot(windex_sbp_causeofdeath)

ggsave('../results/weightindex_sbp_causeofdeath.png', windex_sbp_causeofdeath)

```

```{r}
dsp_sbp_causeofdeath <-prostate_data_augment|>
  filter(`Cause of Death` != 9 & `Cause of Death` != 8 & `Cause of Death` != 7 & `Cause of Death` != 5)|>
  ggplot(aes(x = `Diastolic blood pressure`, 
             y = `Systolic blood pressure`, 
             color = factor(`Cause of Death`))) +
  geom_point() +
  scale_fill_viridis_d()+
  geom_smooth(method = "lm", se = FALSE, color = "black", lwd=0.3)+
  #facet_wrap(~`Cause of Death`, ncol=10)+
  facet_wrap(~`Cause of Death`,labeller = labeller(`Cause of Death` = c(
    0 ~ "prostatic cancer",
    3 ~ "other cancer",
    1 ~ "heart or vascular",
    2 ~ "cerebrovascular",
    4 ~ "respiratory disease",
    6 ~ "pulmonary embolus")))+
    #5 ~ "other specific non", #maybe delete
    #7 ~ "unspecified non", #maybe delete
   # 8 ~ "unknown cause"))) + #maybe delete
  labs(x = "Diastolic blood pressure", y = "Systolic blood pressure", title = "Diastolic vs Systolic blood pressure by Cause of Death") +
  scale_color_discrete(name = "Cause of Death", labels = c(
    "0" = "Prostate Cancer",
    "3" = "Other Cancer",
    "1" = "Heart or Vascular Disease",
    "2" = "Cerebrovascular Disease",
    "4" = "Respiratory Disease",
    "6" = "Pulmonary Embolus",
    "5" = "Other Specific Non",
    "7" = "Unspecified Non",
    "8" = "Unknown Cause"
  )) + 
  theme_minimal()+
  theme(strip.text = element_blank())

plot(dsp_sbp_causeofdeath)

ggsave('../results/dsp_sbp_causeofdeath.png', dsp_sbp_causeofdeath)

```

```{r}
#| label: Systolic vs diastolic blood pressure by History of Cardiovascular disease
dsp_sbp_historycvd <-prostate_data_augment|>
  filter(!is.na(`History of CVD`))|>
  ggplot(aes(x = `Diastolic blood pressure`, 
             y = `Systolic blood pressure`, 
             color = factor(`History of CVD`))) +
  geom_point() +
  scale_fill_viridis_d()+
  geom_smooth(method = "lm", se = FALSE, color = "black", lwd=0.3)+
  facet_wrap(~`History of CVD`,labeller = labeller(`History of CVD` = c(
    0 ~ "No",
    1 ~ "Yes")))+
  labs(x = "Diastolic blood pressure", y = "Systolic blood pressure", title = "Systolic vs diastolic blood pressure by History of Cardiovascular disease") +
  scale_color_discrete(name = "History of Cardiovascular disease", labels = c(
    "No",
    "Yes")) + 
  theme_minimal()+
  theme(strip.text = element_blank())

plot(dsp_sbp_historycvd)

ggsave('../results/dsp_sbp_historycvd.png', dsp_sbp_historycvd)
```

```{r}
#| label: Distribution of Weight index based on Activity level
#| warning: false
windex_actlevel <-ggplot(prostate_data_augment,aes(x = `Weight index`,fill = as.factor(`Activity Level`))) +
  geom_density(alpha=0.3) +
   facet_wrap(~`Activity Level`,labeller = labeller(`History of CVD` = c(
    0 ~ "Normal Activity",
    1 ~ "In bed > 50% of the day")))+
  labs(title = "Distribution of Weight index based on Activity level",
       x = "Weight index",
       y = "Density",
       fill = "Activity Level") +
  scale_fill_manual(values = c("blue", "red"), name = NULL, labels = c("Normal Activity", "In bed > 50% of the day")) +
  theme_minimal() +
  theme(strip.text = element_blank())
  
plot(windex_actlevel)

ggsave('../results/windex_actlevel.png', windex_actlevel)

```
